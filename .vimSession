let SessionLoad = 1
if &cp | set nocp | endif
let s:cpo_save=&cpo
set cpo&vim
imap <S-CR>A <Plug>ZenCodingAnchorizeSummary
inoremap <Plug>ZenCodingAnchorizeSummary :call zencoding#anchorizeURL(1)a
imap <S-CR>a <Plug>ZenCodingAnchorizeURL
inoremap <Plug>ZenCodingAnchorizeURL :call zencoding#anchorizeURL(0)a
imap <S-CR>k <Plug>ZenCodingRemoveTag
inoremap <Plug>ZenCodingRemoveTag :call zencoding#removeTag()a
imap <S-CR>j <Plug>ZenCodingSplitJoinTagInsert
inoremap <Plug>ZenCodingSplitJoinTagInsert :call zencoding#splitJoinTag()a
imap <S-CR>/ <Plug>ZenCodingToggleComment
inoremap <Plug>ZenCodingToggleComment :call zencoding#toggleComment()a
imap <S-CR>i <Plug>ZenCodingImageSize
inoremap <Plug>ZenCodingImageSize :call zencoding#imageSize()a
imap <S-CR>N <Plug>ZenCodingPrev
inoremap <Plug>ZenCodingPrev :call zencoding#moveNextPrev(1)
imap <S-CR>n <Plug>ZenCodingNext
inoremap <Plug>ZenCodingNext :call zencoding#moveNextPrev(0)
imap <S-CR>D <Plug>ZenCodingBalanceTagOutwardInsert
inoremap <Plug>ZenCodingBalanceTagOutwardInsert :call zencoding#balanceTag(-1)a
imap <S-CR>d <Plug>ZenCodingBalanceTagInwardInsert
inoremap <Plug>ZenCodingBalanceTagInwardInsert :call zencoding#balanceTag(1)a
imap <S-CR>; <Plug>ZenCodingExpandWord
inoremap <Plug>ZenCodingExpandWord u:call zencoding#expandAbbr(1)a
imap <S-CR>, <Plug>ZenCodingExpandAbbr
inoremap <Plug>ZenCodingExpandAbbr u:call zencoding#expandAbbr(0)a
imap <S-Tab> <Plug>SuperTabBackward
inoremap <silent> <Plug>NERDCommenterInInsert  <BS>:call NERDComment(0, "insert")
inoremap <M-Down> }
inoremap <M-Up> {
inoremap <M-Right> w
inoremap <M-Left> b
inoremap <M-Del> dw
inoremap <M-BS> db
inoremap <C-Down> }
inoremap <C-Up> {
inoremap <C-Right> w
inoremap <C-Left> b
inoremap <C-Del> dw
inoremap <C-BS> db
inoremap <S-F3> N
inoremap <F3> n
cnoremap <C-F4> c
inoremap <C-F4> c
cnoremap <C-Tab> w
inoremap <C-Tab> 	
imap <S-Insert> 
cmap <S-Insert> +
xmap  <Plug>SpeedDatingUp
snoremap  gggHG
onoremap  gggHG
nmap  <Plug>SpeedDatingUp
vnoremap  
nnoremap  
onoremap  
vnoremap  "+y
vnoremap  /
nnoremap  /
onoremap  /
noremap 	 za
noremap <NL> 
noremap  
map  ‚Å∞
vnoremap  :edit .
nnoremap  :edit .
onoremap  :edit .
vnoremap  ZZ
nnoremap  ZZ
onoremap  ZZ
vnoremap  :update
nnoremap  :update
onoremap  :update
nmap  "+gP
omap  "+gP
xmap  <Plug>SpeedDatingDown
nmap  <Plug>SpeedDatingDown
snoremap  "+x
noremap  
noremap  u
noremap <silent> C :call WindowCmd("c")
noremap <silent> c :call WindowCollapse()
noremap <silent> o :call WindowCmd("n")
noremap <silent>  :call WindowResize("l")
noremap <silent>  :call WindowResize("k")
noremap <silent> <NL> :call WindowResize("j")
noremap <silent>  :call WindowResize("h")
noremap <silent> L :call WindowMove("l")
noremap <silent> K :call WindowMove("k")
noremap <silent> J :call WindowMove("j")
noremap <silent> H :call WindowMove("h")
noremap <silent> l :call WindowCmd("l")
noremap <silent> k :call WindowCmd("k")
noremap <silent> j :call WindowCmd("j")
noremap <silent> h :call WindowCmd("h")
noremap <silent> f :call SetTilingMode("F")
noremap <silent> d :call SetTilingMode("D")
noremap <silent> s :call SetTilingMode("S")
noremap <silent> 0 :tabn 10
noremap <silent> 9 :tabn  9
noremap <silent> 8 :tabn  8
noremap <silent> 7 :tabn  7
noremap <silent> 6 :tabn  6
noremap <silent> 5 :tabn  5
noremap <silent> 4 :tabn  4
noremap <silent> 3 :tabn  3
noremap <silent> 2 :tabn  2
noremap <silent> 1 :tabn  1
map <Down> }
map <Up> {
map <Right> W
map <Left> B
noremap <silent> I :exe "tabmove " . tabpagenr()
noremap <silent> U :exe "tabmove " .(tabpagenr()-2)
noremap <silent> i :tabnext
noremap <silent> u :tabprev
noremap <silent> y :tabnew
noremap ww 
noremap w 
noremap p :bp
noremap n :bn
noremap a 
noremap x 
noremap v 
noremap r 
noremap <silent> e :call Ranger()
map <silent>  :ConqueTermSplit bash
noremap   <PageDown>
noremap <silent> ZV :exec 'source ' . getcwd() . '/.vimSession'
noremap <silent> ZC :set sessionoptions="folds,tabpages,winsize" :call AutocloseSession()
noremap <silent> ZZ :call AutocloseSession()
nmap d <Plug>SpeedDatingNowLocal
nmap d <Plug>SpeedDatingNowUTC
nmap gx <Plug>NetrwBrowseX
noremap g<S-Tab> gT
noremap g	 gt
nnoremap <silent> <Plug>NetrwBrowseX :call netrw#NetrwBrowseX(expand("<cWORD>"),0)
nmap <S-CR>A <Plug>ZenCodingAnchorizeSummary
nnoremap <Plug>ZenCodingAnchorizeSummary :call zencoding#anchorizeURL(1)
nmap <S-CR>a <Plug>ZenCodingAnchorizeURL
nnoremap <Plug>ZenCodingAnchorizeURL :call zencoding#anchorizeURL(0)
nmap <S-CR>k <Plug>ZenCodingRemoveTag
nnoremap <Plug>ZenCodingRemoveTag :call zencoding#removeTag()
nmap <S-CR>j <Plug>ZenCodingSplitJoinTagNormal
nnoremap <Plug>ZenCodingSplitJoinTagNormal :call zencoding#splitJoinTag()
nmap <S-CR>/ <Plug>ZenCodingToggleComment
nnoremap <Plug>ZenCodingToggleComment :call zencoding#toggleComment()
nmap <S-CR>i <Plug>ZenCodingImageSize
nnoremap <Plug>ZenCodingImageSize :call zencoding#imageSize()
nmap <S-CR>N <Plug>ZenCodingPrev
nnoremap <Plug>ZenCodingPrev :call zencoding#moveNextPrev(1)
nmap <S-CR>n <Plug>ZenCodingNext
nnoremap <Plug>ZenCodingNext :call zencoding#moveNextPrev(0)
vmap <S-CR>D <Plug>ZenCodingBalanceTagOutwardVisual
vnoremap <Plug>ZenCodingBalanceTagOutwardVisual :call zencoding#balanceTag(-2)
nmap <S-CR>D <Plug>ZenCodingBalanceTagOutwardNormal
nnoremap <Plug>ZenCodingBalanceTagOutwardNormal :call zencoding#balanceTag(-1)
vmap <S-CR>d <Plug>ZenCodingBalanceTagInwardVisual
vnoremap <Plug>ZenCodingBalanceTagInwardVisual :call zencoding#balanceTag(2)
nmap <S-CR>d <Plug>ZenCodingBalanceTagInwardNormal
nnoremap <Plug>ZenCodingBalanceTagInwardNormal :call zencoding#balanceTag(1)
nmap <S-CR>; <Plug>ZenCodingExpandWord
nnoremap <Plug>ZenCodingExpandWord :call zencoding#expandAbbr(1)
nmap <S-CR>, <Plug>ZenCodingExpandNormal
nnoremap <Plug>ZenCodingExpandNormal :call zencoding#expandAbbr(3)
vmap <S-CR>, <Plug>ZenCodingExpandVisual
vnoremap <Plug>ZenCodingExpandVisual :call zencoding#expandAbbr(2)
nmap <silent> <Plug>NERDCommenterAppend :call NERDComment(0, "append")
nnoremap <silent> <Plug>NERDCommenterToEOL :call NERDComment(0, "toEOL")
vnoremap <silent> <Plug>NERDCommenterUncomment :call NERDComment(1, "uncomment")
nnoremap <silent> <Plug>NERDCommenterUncomment :call NERDComment(0, "uncomment")
vnoremap <silent> <Plug>NERDCommenterNest :call NERDComment(1, "nested")
nnoremap <silent> <Plug>NERDCommenterNest :call NERDComment(0, "nested")
vnoremap <silent> <Plug>NERDCommenterAlignBoth :call NERDComment(1, "alignBoth")
nnoremap <silent> <Plug>NERDCommenterAlignBoth :call NERDComment(0, "alignBoth")
vnoremap <silent> <Plug>NERDCommenterAlignLeft :call NERDComment(1, "alignLeft")
nnoremap <silent> <Plug>NERDCommenterAlignLeft :call NERDComment(0, "alignLeft")
vmap <silent> <Plug>NERDCommenterYank :call NERDComment(1, "yank")
nmap <silent> <Plug>NERDCommenterYank :call NERDComment(0, "yank")
vnoremap <silent> <Plug>NERDCommenterInvert :call NERDComment(1, "invert")
nnoremap <silent> <Plug>NERDCommenterInvert :call NERDComment(0, "invert")
vnoremap <silent> <Plug>NERDCommenterSexy :call NERDComment(1, "sexy")
nnoremap <silent> <Plug>NERDCommenterSexy :call NERDComment(0, "sexy")
vnoremap <silent> <Plug>NERDCommenterMinimal :call NERDComment(1, "minimal")
nnoremap <silent> <Plug>NERDCommenterMinimal :call NERDComment(0, "minimal")
vnoremap <silent> <Plug>NERDCommenterToggle :call NERDComment(1, "toggle")
nnoremap <silent> <Plug>NERDCommenterToggle :call NERDComment(0, "toggle")
vnoremap <silent> <Plug>NERDCommenterComment :call NERDComment(1, "norm")
nnoremap <silent> <Plug>NERDCommenterComment :call NERDComment(0, "norm")
vnoremap <C-Down> }
vnoremap <C-Up> {
vnoremap <C-Right> w
vnoremap <C-Left> b
vnoremap <C-Del> dw
vnoremap <C-BS> db
vnoremap <S-F3> N
nnoremap <S-F3> N
onoremap <S-F3> N
vnoremap <F3> n
nnoremap <F3> n
onoremap <F3> n
onoremap <C-F4> c
nnoremap <C-F4> c
vnoremap <C-F4> c
onoremap <C-Tab> w
vmap <S-Insert> 
nmap <S-Insert> "+gP
omap <S-Insert> "+gP
vnoremap <C-Insert> "+y
vnoremap <S-Del> "+x
vnoremap <BS> d
map <M-Down> }
map <M-Up> {
nnoremap <C-Down> }
onoremap <C-Down> }
nnoremap <C-Up> {
onoremap <C-Up> {
map <M-Right> W
map <M-Left> B
noremap <silent> <C-PageDown> :exe "tabmove " . tabpagenr()
noremap <silent> <C-PageUp> :exe "tabmove " .(tabpagenr()-2)
noremap <C-S-Tab> gT
nnoremap <C-Tab> w
vnoremap <C-Tab> w
noremap <S-Tab> zA
nnoremap <BS> <PageUp>
onoremap <BS> <PageUp>
cnoremap  gggHG
inoremap  gggHG
inoremap  /
imap 	 <Plug>SuperTabForward
imap  <Plug>SuperTabForward
inoremap  :edit .
imap  <Plug>SuperTabBackward
inoremap  ZZ
inoremap  :update
cmap  +
inoremap  
inoremap  u
inoremap <Down> }
inoremap <Up> {
inoremap <Right> w
inoremap <Left> b
inoremap <Del> dw
inoremap <BS> db
inoremap o 
noremap <silent> ¬å :call WindowResize("l")
noremap <silent> ¬ã :call WindowResize("k")
noremap <silent> ¬ä :call WindowResize("j")
noremap <silent> ¬à :call WindowResize("h")
noremap <silent> ¬∞ :tabn 10
noremap <silent> ¬π :tabn  9
noremap <silent> ¬∏ :tabn  8
noremap <silent> ¬∑ :tabn  7
noremap <silent> ¬∂ :tabn  6
noremap <silent> ¬µ :tabn  5
noremap <silent> ¬¥ :tabn  4
noremap <silent> ¬≥ :tabn  3
noremap <silent> ¬≤ :tabn  2
noremap <silent> ¬± :tabn  1
noremap ¬† :simalt ~
noremap <silent> √É :call WindowCmd("c")
noremap <silent> √£ :call WindowCollapse()
noremap <silent> √Ø :call WindowCmd("n")
noremap <silent> √å :call WindowMove("l")
noremap <silent> √ã :call WindowMove("k")
noremap <silent> √ä :call WindowMove("j")
noremap <silent> √à :call WindowMove("h")
noremap <silent> √¨ :call WindowCmd("l")
noremap <silent> √´ :call WindowCmd("k")
noremap <silent> √™ :call WindowCmd("j")
noremap <silent> √® :call WindowCmd("h")
noremap <silent> √¶ :call SetTilingMode("F")
noremap <silent> √§ :call SetTilingMode("D")
noremap <silent> √≥ :call SetTilingMode("S")
noremap <silent> ‚Å∞T0 :call MoveToTab(10,1)
noremap <silent> ‚Å∞T9 :call MoveToTab( 9,1)
noremap <silent> ‚Å∞T8 :call MoveToTab( 8,1)
noremap <silent> ‚Å∞T7 :call MoveToTab( 7,1)
noremap <silent> ‚Å∞T6 :call MoveToTab( 6,1)
noremap <silent> ‚Å∞T5 :call MoveToTab( 5,1)
noremap <silent> ‚Å∞T4 :call MoveToTab( 4,1)
noremap <silent> ‚Å∞T3 :call MoveToTab( 3,1)
noremap <silent> ‚Å∞T2 :call MoveToTab( 2,1)
noremap <silent> ‚Å∞T1 :call MoveToTab( 1,1)
noremap <silent> ‚Å∞t0 :call MoveToTab(10,0)
noremap <silent> ‚Å∞t9 :call MoveToTab( 9,0)
noremap <silent> ‚Å∞t8 :call MoveToTab( 8,0)
noremap <silent> ‚Å∞t7 :call MoveToTab( 7,0)
noremap <silent> ‚Å∞t6 :call MoveToTab( 6,0)
noremap <silent> ‚Å∞t5 :call MoveToTab( 5,0)
noremap <silent> ‚Å∞t4 :call MoveToTab( 4,0)
noremap <silent> ‚Å∞t3 :call MoveToTab( 3,0)
noremap <silent> ‚Å∞t2 :call MoveToTab( 2,0)
noremap <silent> ‚Å∞t1 :call MoveToTab( 1,0)
noremap <silent> ‚Å∞0 :tabn 10
noremap <silent> ‚Å∞9 :tabn  9
noremap <silent> ‚Å∞8 :tabn  8
noremap <silent> ‚Å∞7 :tabn  7
noremap <silent> ‚Å∞6 :tabn  6
noremap <silent> ‚Å∞5 :tabn  5
noremap <silent> ‚Å∞4 :tabn  4
noremap <silent> ‚Å∞3 :tabn  3
noremap <silent> ‚Å∞2 :tabn  2
noremap <silent> ‚Å∞1 :tabn  1
nmap ‚Å∞ca <Plug>NERDCommenterAltDelims
vmap ‚Å∞cA <Plug>NERDCommenterAppend
nmap ‚Å∞cA <Plug>NERDCommenterAppend
vmap ‚Å∞c$ <Plug>NERDCommenterToEOL
nmap ‚Å∞c$ <Plug>NERDCommenterToEOL
vmap ‚Å∞cu <Plug>NERDCommenterUncomment
nmap ‚Å∞cu <Plug>NERDCommenterUncomment
vmap ‚Å∞cn <Plug>NERDCommenterNest
nmap ‚Å∞cn <Plug>NERDCommenterNest
vmap ‚Å∞cb <Plug>NERDCommenterAlignBoth
nmap ‚Å∞cb <Plug>NERDCommenterAlignBoth
vmap ‚Å∞cl <Plug>NERDCommenterAlignLeft
nmap ‚Å∞cl <Plug>NERDCommenterAlignLeft
vmap ‚Å∞cy <Plug>NERDCommenterYank
nmap ‚Å∞cy <Plug>NERDCommenterYank
vmap ‚Å∞ci <Plug>NERDCommenterInvert
nmap ‚Å∞ci <Plug>NERDCommenterInvert
vmap ‚Å∞cs <Plug>NERDCommenterSexy
nmap ‚Å∞cs <Plug>NERDCommenterSexy
vmap ‚Å∞cm <Plug>NERDCommenterMinimal
nmap ‚Å∞cm <Plug>NERDCommenterMinimal
vmap ‚Å∞c  <Plug>NERDCommenterToggle
nmap ‚Å∞c  <Plug>NERDCommenterToggle
vmap ‚Å∞cc <Plug>NERDCommenterComment
nmap ‚Å∞cc <Plug>NERDCommenterComment
noremap ‚Å∞ zz
inoremap jj 
let &cpo=s:cpo_save
unlet s:cpo_save
set autochdir
set backspace=indent,eol,start
set backupdir=~/.vim/backup
set cindent
set completeopt=menuone,longest,preview
set directory=~/.vim/backup
set expandtab
set fileencodings=ucs-bom,utf-8,default,latin1
set guifont=Ubuntu\ Mono\ 11
set guioptions=
set guitablabel=%{SucklessTabLabel()}
set helplang=fr
set hlsearch
set ignorecase
set incsearch
set keymodel=startsel,stopsel
set listchars=nbsp:¬§,tab:>¬∑,trail:¬§,extends:>,precedes:<
set modelines=0
set mouse=a
set mousemodel=popup
set nrformats=hex
set omnifunc=pythoncomplete#Complete
set printoptions=paper:a4
set ruler
set runtimepath=~/.vim,~/.vim/bundle/autosession.vim,~/.vim/bundle/gundo.vim,~/.vim/bundle/html5.vim,~/.vim/bundle/kalahari.vim,~/.vim/bundle/nerdcommenter,~/.vim/bundle/pydoc.vim,~/.vim/bundle/suckless.vim,~/.vim/bundle/supertab,~/.vim/bundle/tabular,~/.vim/bundle/vim-fugitive,~/.vim/bundle/vim-orgmode,~/.vim/bundle/vim-speeddating,~/.vim/bundle/zencoding-vim,/var/lib/vim/addons,/usr/share/vim/vimfiles,/usr/share/vim/vim73,/usr/share/vim/vimfiles/after,/var/lib/vim/addons/after,~/.vim/bundle/tabular/after,~/.vim/after
set selection=exclusive
set selectmode=mouse,key
set shiftwidth=2
set showfulltag
set showmatch
set showtabline=2
set smartcase
set smartindent
set softtabstop=2
set suffixes=.bak,~,.swp,.o,.info,.aux,.log,.dvi,.bbl,.blg,.brf,.cb,.ind,.idx,.ilg,.inx,.out,.toc
set switchbuf=useopen
set tabline=%!SucklessTabLine()
set tabstop=2
set textwidth=80
set title
set updatecount=0
set whichwrap=b,s,<,>,[,]
set wildignore=*.pyc
set wildignorecase
set wildmode=longest:list
set nowrapscan
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/www/gaia-l10n
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +0 ~/www/gaia-l10n/merge.py
badd +0 ~/www/gaia-l10n/README.md
args merge.py
edit ~/www/gaia-l10n/README.md
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
exe 'vert 1resize ' . ((&columns * 96 + 96) / 193)
exe 'vert 2resize ' . ((&columns * 96 + 96) / 193)
argglobal
setlocal keymap=
setlocal noarabic
setlocal noautoindent
setlocal balloonexpr=
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal cindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=fb:*,fb:-,fb:+,n:>
setlocal commentstring=>\ %s
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
set cursorline
setlocal cursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'markdown'
setlocal filetype=markdown
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=manual
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=tcqln
setlocal formatlistpat=^\\s*\\d\\+\\.\\s\\+\\|^[-*+]\\s\\+
setlocal grepprg=
setlocal iminsert=2
setlocal imsearch=2
setlocal include=
setlocal includeexpr=
setlocal indentexpr=
setlocal indentkeys=0{,0},:,0#,!^F,o,O,e
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255
setlocal keywordprg=
setlocal nolinebreak
setlocal nolisp
set list
setlocal list
setlocal makeprg=
setlocal matchpairs=(:),{:},[:],<:>
setlocal modeline
setlocal modifiable
setlocal nrformats=hex
set number
setlocal number
set numberwidth=6
setlocal numberwidth=6
setlocal omnifunc=htmlcomplete#CompleteTags
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=2
setlocal noshortname
setlocal smartindent
setlocal softtabstop=2
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'markdown'
setlocal syntax=markdown
endif
setlocal tabstop=2
setlocal tags=~/www/gaia-l10n/.git/markdown.tags,~/www/gaia-l10n/.git/tags,./tags,./TAGS,tags,TAGS
setlocal textwidth=80
setlocal thesaurus=
setlocal noundofile
setlocal nowinfixheight
setlocal nowinfixwidth
set nowrap
setlocal nowrap
setlocal wrapmargin=0
silent! normal! zE
let s:l = 1 - ((0 * winheight(0) + 21) / 43)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
1
normal! 0
wincmd w
argglobal
edit ~/www/gaia-l10n/merge.py
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal balloonexpr=
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal cindent
setlocal cinkeys=0{,0},0),:,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=s1:/*,mb:*,ex:*/,://,b:#,:XCOMM,n:>,fb:-
setlocal commentstring=#%s
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
set cursorline
setlocal cursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'python'
setlocal filetype=python
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=indent
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=tcq
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=2
setlocal imsearch=2
setlocal include=^\\s*\\(from\\|import\\)
setlocal includeexpr=substitute(v:fname,'\\.','/','g')
setlocal indentexpr=GetPythonIndent(v:lnum)
setlocal indentkeys=0{,0},:,!^F,o,O,e,<:>,=elif,=except
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255
setlocal keywordprg=pydoc
setlocal nolinebreak
setlocal nolisp
set list
setlocal list
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=hex
set number
setlocal number
set numberwidth=6
setlocal numberwidth=6
setlocal omnifunc=pythoncomplete#Complete
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=2
setlocal noshortname
setlocal smartindent
setlocal softtabstop=2
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=.py
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'python'
setlocal syntax=python
endif
setlocal tabstop=2
setlocal tags=~/www/gaia-l10n/.git/python.tags,~/www/gaia-l10n/.git/tags,./tags,./TAGS,tags,TAGS
setlocal textwidth=80
setlocal thesaurus=
setlocal noundofile
setlocal nowinfixheight
setlocal nowinfixwidth
set nowrap
setlocal nowrap
setlocal wrapmargin=0
let s:l = 1 - ((0 * winheight(0) + 21) / 43)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
1
normal! 0
wincmd w
exe 'vert 1resize ' . ((&columns * 96 + 96) / 193)
exe 'vert 2resize ' . ((&columns * 96 + 96) / 193)
tabnext 1
if exists('s:wipebuf')
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToO
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
